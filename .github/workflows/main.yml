name: Compile
on:
  push:
  workflow_dispatch:
jobs:
  Windows:
    runs-on: windows-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: latest

      - name: Restore Previous Cache
        id: cache-debug-build-windows-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib
            exportJon/windows/haxe
            exportJon/windows/obj
          key: cache-windows-build

      - name: Installing Libraries
        run: |
          haxelib install hmm
          haxelib run hmm install

      - name: Building
        run: haxelib run lime build windows -release

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})

            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-windows-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message)
            }

      - name: Save Current Cache
        id: cache-release-build-windows-save
        uses: actions/cache/save@main
        with:
          path: |
            .haxelib
            exportJon/windows/haxe
            exportJon/windows/obj
          key: cache-windows-build

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: exportJon/windows/bin
          if-no-files-found: warn
  MacOS:
    runs-on: macos-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: latest

      - name: Restore Previous Cache
        id: cache-build-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib
            exportJon/macos/haxe
            exportJon/macos/obj
          key: cache-macos-build

      - name: Installing Libraries
        run: |
          haxelib install hmm
          haxelib run hmm install

      - name: Building
        run: haxelib run lime build mac -release

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})

            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-macos-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message)
            }

      - name: Save Current Cache
        id: cache-build-save
        uses: actions/cache/save@main
        with:
          path: |
            .haxelib
            exportJon/macos/haxe
            exportJon/macos/obj
          key: cache-macos-build

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: macosBuild
          path: exportJon/macos/bin
          if-no-files-found: warn
  Linux:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: latest

      - name: Restore Previous Cache
        id: cache-build-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib
            exportJon/linux/haxe
            exportJon/linux/obj
          key: cache-linux-build

      - name: Installing libVLC
        run: sudo apt-get install libvlc-dev libvlccore-dev

      - name: Installing Libraries
        run: |
          haxelib install hmm
          haxelib run hmm install 

      - name: Building
        run: haxelib run lime build linux -release

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})

            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-linux-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message)
            }

      - name: Save Current Cache
        id: cache-build-save
        uses: actions/cache/save@main
        with:
          path: |
            .haxelib
            exportJon/linux/haxe
            exportJon/linux/obj
          key: cache-linux-build

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild
          path: exportJon/linux/bin
          if-no-files-found: warn
  Android:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@main
        with:
          ndk-version: r21e

      - name: Setup Java
        uses: actions/setup-java@main
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: latest

      - name: Restore Previous Cache
        id: cache-build-restore
        uses: actions/cache/restore@main
        with:
          path: |
            .haxelib
            exportJon/android/haxe
            exportJon/android/obj
          key: cache-android-build

      - name: Installing Libraries
        run: |
          haxelib install hmm
          haxelib run hmm install

      - name: Configure Android
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Building
        run: haxelib run lime build android -release

      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})

            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-android-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message)
            }

      - name: Save Current Cache
        id: cache-build-save
        uses: actions/cache/save@main
        with:
          path: |
            .haxelib
            exportJon/android/haxe
            exportJon/android/obj
          key: cache-android-build

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: exportJon/android/bin/app/build/outputs/apk/debug
          if-no-files-found: warn
